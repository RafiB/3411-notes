\BOOKMARK [-1][-]{part.1}{I Week 1}{}% 1
\BOOKMARK [0][-]{chapter.1}{Environment Types}{part.1}% 2
\BOOKMARK [1][-]{section.1.1}{PEAS}{chapter.1}% 3
\BOOKMARK [2][-]{subsection.1.1.1}{Performance}{section.1.1}% 4
\BOOKMARK [2][-]{subsection.1.1.2}{Environment}{section.1.1}% 5
\BOOKMARK [3][-]{section*.2}{Fully or partially observable}{subsection.1.1.2}% 6
\BOOKMARK [3][-]{section*.3}{Deterministic or stochastic or strategic}{subsection.1.1.2}% 7
\BOOKMARK [3][-]{section*.4}{Episodic or sequential}{subsection.1.1.2}% 8
\BOOKMARK [3][-]{section*.5}{Discrete or continuous}{subsection.1.1.2}% 9
\BOOKMARK [3][-]{section*.6}{Single-agent or multi-agent}{subsection.1.1.2}% 10
\BOOKMARK [3][-]{section*.7}{Static or Dynamic}{subsection.1.1.2}% 11
\BOOKMARK [3][-]{section*.8}{Known or Unknown}{subsection.1.1.2}% 12
\BOOKMARK [3][-]{section*.9}{Simulated, or Situated}{subsection.1.1.2}% 13
\BOOKMARK [4][-]{section*.10}{Situated or Embodied?}{section*.9}% 14
\BOOKMARK [3][-]{section*.11}{The Real World}{subsection.1.1.2}% 15
\BOOKMARK [2][-]{subsection.1.1.3}{Actuators}{section.1.1}% 16
\BOOKMARK [2][-]{subsection.1.1.4}{Sensors}{section.1.1}% 17
\BOOKMARK [2][-]{subsection.1.1.5}{PEAS: Wumpus World}{section.1.1}% 18
\BOOKMARK [3][-]{section*.12}{Performance Measure}{subsection.1.1.5}% 19
\BOOKMARK [3][-]{section*.13}{Actuators}{subsection.1.1.5}% 20
\BOOKMARK [3][-]{section*.14}{Sensors}{subsection.1.1.5}% 21
\BOOKMARK [2][-]{subsection.1.1.6}{PEAS: Self-driving car}{section.1.1}% 22
\BOOKMARK [3][-]{section*.15}{Performance measure}{subsection.1.1.6}% 23
\BOOKMARK [3][-]{section*.16}{Environment}{subsection.1.1.6}% 24
\BOOKMARK [3][-]{section*.17}{Actuators}{subsection.1.1.6}% 25
\BOOKMARK [3][-]{section*.18}{Sensors}{subsection.1.1.6}% 26
\BOOKMARK [-1][-]{part.2}{II Week 2}{}% 27
\BOOKMARK [0][-]{chapter.2}{Agent Types}{part.2}% 28
\BOOKMARK [1][-]{section.2.1}{Reactive Agent}{chapter.2}% 29
\BOOKMARK [2][-]{subsection.2.1.1}{Limitations of Reactive Agents}{section.2.1}% 30
\BOOKMARK [1][-]{section.2.2}{Model-Based Agent}{chapter.2}% 31
\BOOKMARK [2][-]{subsection.2.2.1}{Advantages of Model-Based Agents}{section.2.2}% 32
\BOOKMARK [2][-]{subsection.2.2.2}{Limitations of Model-Based Agents}{section.2.2}% 33
\BOOKMARK [1][-]{section.2.3}{Planning Agent}{chapter.2}% 34
\BOOKMARK [1][-]{section.2.4}{Learning Agent}{chapter.2}% 35
\BOOKMARK [0][-]{chapter.3}{Solving Problems by Searching}{part.2}% 36
\BOOKMARK [1][-]{section.3.1}{Motivation}{chapter.3}% 37
\BOOKMARK [1][-]{section.3.2}{Romania Example}{chapter.3}% 38
\BOOKMARK [2][-]{subsection.3.2.1}{Single-State Task Specification}{section.3.2}% 39
\BOOKMARK [2][-]{subsection.3.2.2}{Choosing states and actions}{section.3.2}% 40
\BOOKMARK [2][-]{subsection.3.2.3}{Problem types}{section.3.2}% 41
\BOOKMARK [2][-]{subsection.3.2.4}{Applying task specifications}{section.3.2}% 42
\BOOKMARK [3][-]{section*.19}{The 8-Puzzle}{subsection.3.2.4}% 43
\BOOKMARK [3][-]{section*.20}{Rubik's Cube}{subsection.3.2.4}% 44
\BOOKMARK [1][-]{section.3.3}{Path Search Algorithms}{chapter.3}% 45
\BOOKMARK [2][-]{subsection.3.3.1}{Data Structures for Search Trees}{section.3.3}% 46
\BOOKMARK [2][-]{subsection.3.3.2}{Search Strategies}{section.3.3}% 47
\BOOKMARK [2][-]{subsection.3.3.3}{Approaches to comparing algorithms}{section.3.3}% 48
\BOOKMARK [3][-]{section*.21}{Benchmarking}{subsection.3.3.3}% 49
\BOOKMARK [3][-]{section*.22}{Analysis of algorithms}{subsection.3.3.3}% 50
\BOOKMARK [2][-]{subsection.3.3.4}{Uninformed Search Strategies}{section.3.3}% 51
\BOOKMARK [3][-]{section*.23}{Breadth-first search}{subsection.3.3.4}% 52
\BOOKMARK [3][-]{section*.24}{Uniform-Cost Search}{subsection.3.3.4}% 53
\BOOKMARK [3][-]{section*.25}{Depth-First Search}{subsection.3.3.4}% 54
\BOOKMARK [3][-]{section*.26}{Depth-Limited Search}{subsection.3.3.4}% 55
\BOOKMARK [3][-]{section*.27}{Iterative Deepening Search}{subsection.3.3.4}% 56
\BOOKMARK [3][-]{section*.28}{Bidirectional Search}{subsection.3.3.4}% 57
\BOOKMARK [3][-]{section*.29}{Complexities of Uninformed Search Strategies}{subsection.3.3.4}% 58
\BOOKMARK [2][-]{subsection.3.3.5}{Informed Search Strategies}{section.3.3}% 59
\BOOKMARK [-1][-]{part.3}{III Week 3}{}% 60
\BOOKMARK [0][-]{chapter.4}{Informed Search}{part.3}% 61
\BOOKMARK [1][-]{section.4.1}{Search Strategies}{chapter.4}% 62
\BOOKMARK [1][-]{section.4.2}{Best-First Search}{chapter.4}% 63
\BOOKMARK [2][-]{subsection.4.2.1}{Greedy Best-First Search}{section.4.2}% 64
\BOOKMARK [2][-]{subsection.4.2.2}{Straight Line Distance as a Heuristic}{section.4.2}% 65
\BOOKMARK [2][-]{subsection.4.2.3}{A* Search}{section.4.2}% 66
\BOOKMARK [3][-]{section*.30}{Proving Optimality of A* Search}{subsection.4.2.3}% 67
\BOOKMARK [2][-]{subsection.4.2.4}{Iterative Deepening A* Search}{section.4.2}% 68
\BOOKMARK [1][-]{section.4.3}{Heuristics}{chapter.4}% 69
\BOOKMARK [2][-]{subsection.4.3.1}{Dominance of Heuristics}{section.4.3}% 70
\BOOKMARK [2][-]{subsection.4.3.2}{How to Find Heuristic Functions}{section.4.3}% 71
\BOOKMARK [0][-]{chapter.5}{Reactive Agents}{part.3}% 72
\BOOKMARK [1][-]{section.5.1}{History of Reactive Agents}{chapter.5}% 73
\BOOKMARK [2][-]{subsection.5.1.1}{Braitenberg Vehicles}{section.5.1}% 74
\BOOKMARK [3][-]{section*.31}{Hate: Crossed and excitatory}{subsection.5.1.1}% 75
\BOOKMARK [3][-]{section*.32}{Love: Straight and inhibitory}{subsection.5.1.1}% 76
\BOOKMARK [3][-]{section*.33}{Fear: Straight and excitatory}{subsection.5.1.1}% 77
\BOOKMARK [3][-]{section*.34}{Curiosity: Crossed and inhibitory}{subsection.5.1.1}% 78
\BOOKMARK [2][-]{subsection.5.1.2}{The Swiss Robots}{section.5.1}% 79
\BOOKMARK [1][-]{section.5.2}{Behaviour-Based Robotics}{chapter.5}% 80
\BOOKMARK [2][-]{subsection.5.2.1}{Modern Perspective}{section.5.2}% 81
\BOOKMARK [-1][-]{part.4}{IV Week 4}{}% 82
\BOOKMARK [0][-]{chapter.6}{Games}{part.4}% 83
\BOOKMARK [1][-]{section.6.1}{Why Games?}{chapter.6}% 84
\BOOKMARK [1][-]{section.6.2}{Types of Games}{chapter.6}% 85
\BOOKMARK [2][-]{subsection.6.2.1}{Discrete Games}{section.6.2}% 86
\BOOKMARK [2][-]{subsection.6.2.2}{Continuous, embodied games}{section.6.2}% 87
\BOOKMARK [1][-]{section.6.3}{Key Ideas}{chapter.6}% 88
\BOOKMARK [2][-]{subsection.6.3.1}{Minimax}{section.6.3}% 89
\BOOKMARK [3][-]{section*.35}{Minimax Algorithm}{subsection.6.3.1}% 90
\BOOKMARK [4][-]{section*.36}{Negamax formulation of Minimax}{section*.35}% 91
\BOOKMARK [4][-]{section*.37}{Properties of Minimax}{section*.35}% 92
\BOOKMARK [2][-]{subsection.6.3.2}{Reducing the Search Effort}{section.6.3}% 93
\BOOKMARK [3][-]{section*.38}{Heuristic Evaluation for Chess}{subsection.6.3.2}% 94
\BOOKMARK [3][-]{section*.39}{Motivation for Pruning}{subsection.6.3.2}% 95
\BOOKMARK [3][-]{section*.40}{- search algorithm}{subsection.6.3.2}% 96
\BOOKMARK [4][-]{section*.41}{Negamax formulation of - search}{section*.40}% 97
\BOOKMARK [4][-]{section*.42}{Why is it called -?}{section*.40}% 98
\BOOKMARK [4][-]{section*.43}{Properties of -}{section*.40}% 99
\BOOKMARK [1][-]{section.6.4}{Chess}{chapter.6}% 100
\BOOKMARK [1][-]{section.6.5}{Checkers}{chapter.6}% 101
\BOOKMARK [1][-]{section.6.6}{Go}{chapter.6}% 102
\BOOKMARK [1][-]{section.6.7}{Stochastic Games}{chapter.6}% 103
\BOOKMARK [1][-]{section.6.8}{Partially Observable Games}{chapter.6}% 104
\BOOKMARK [0][-]{chapter.7}{Motion Planning}{part.4}% 105
\BOOKMARK [1][-]{section.7.1}{Motion Planning Approaches}{chapter.7}% 106
\BOOKMARK [2][-]{subsection.7.1.1}{Unknown Environments \(on-board sensors only\)}{section.7.1}% 107
\BOOKMARK [3][-]{section*.44}{Occupancy Grid}{subsection.7.1.1}% 108
\BOOKMARK [3][-]{section*.45}{Potential Field}{subsection.7.1.1}% 109
\BOOKMARK [3][-]{section*.46}{Vector Field Histogram}{subsection.7.1.1}% 110
\BOOKMARK [2][-]{subsection.7.1.2}{Known Environments \(overhead cameras\)}{section.7.1}% 111
\BOOKMARK [3][-]{section*.47}{Delaunay Triangulation}{subsection.7.1.2}% 112
\BOOKMARK [3][-]{section*.48}{Parameterized Cubic Splines}{subsection.7.1.2}% 113
\BOOKMARK [2][-]{subsection.7.1.3}{Minimizing Time instead of Distance}{section.7.1}% 114
\BOOKMARK [-1][-]{part.5}{V Week 5}{}% 115
\BOOKMARK [0][-]{chapter.8}{Constraint Satisfaction Problems}{part.5}% 116
\BOOKMARK [1][-]{section.8.1}{Constraint Satisfaction Problems \(CSPs\)}{chapter.8}% 117
\BOOKMARK [2][-]{subsection.8.1.1}{Example: Map Colouring}{section.8.1}% 118
\BOOKMARK [2][-]{subsection.8.1.2}{Example: n-Queens Puzzle}{section.8.1}% 119
\BOOKMARK [2][-]{subsection.8.1.3}{Example: Cryptarithmetic}{section.8.1}% 120
\BOOKMARK [3][-]{section*.49}{Cryptarithmetic with Hidden Variables}{subsection.8.1.3}% 121
\BOOKMARK [2][-]{subsection.8.1.4}{Example: Sudoku}{section.8.1}% 122
\BOOKMARK [2][-]{subsection.8.1.5}{Real-World CSPs}{section.8.1}% 123
\BOOKMARK [2][-]{subsection.8.1.6}{Types of Constraints for CSPs}{section.8.1}% 124
\BOOKMARK [2][-]{subsection.8.1.7}{Standard search formulation}{section.8.1}% 125
\BOOKMARK [2][-]{subsection.8.1.8}{Backtracking search}{section.8.1}% 126
\BOOKMARK [3][-]{section*.50}{Minimum Remaining Values \(MRV\)}{subsection.8.1.8}% 127
\BOOKMARK [3][-]{section*.51}{Degree Heuristic}{subsection.8.1.8}% 128
\BOOKMARK [3][-]{section*.52}{Least Constraining Value}{subsection.8.1.8}% 129
\BOOKMARK [3][-]{section*.53}{Forward Checking}{subsection.8.1.8}% 130
\BOOKMARK [4][-]{section*.54}{Constraint propagation}{section*.53}% 131
\BOOKMARK [3][-]{section*.55}{Arc Consistency}{subsection.8.1.8}% 132
\BOOKMARK [2][-]{subsection.8.1.9}{Local Search}{section.8.1}% 133
\BOOKMARK [3][-]{section*.56}{Hill-climbing by min-conflicts}{subsection.8.1.9}% 134
\BOOKMARK [4][-]{section*.57}{Phase transition in CSPs}{section*.56}% 135
\BOOKMARK [3][-]{section*.58}{Flat regions and local optima}{subsection.8.1.9}% 136
\BOOKMARK [2][-]{subsection.8.1.10}{Simulated Annealing}{section.8.1}% 137
\BOOKMARK [0][-]{chapter.9}{Evolutionary Computation}{part.5}% 138
\BOOKMARK [1][-]{section.9.1}{Evolutionary Computation Paradigms}{chapter.9}% 139
\BOOKMARK [2][-]{subsection.9.1.1}{Bit String Operators \(Genetic Algorithm\)}{section.9.1}% 140
\BOOKMARK [3][-]{section*.59}{Crossovers}{subsection.9.1.1}% 141
\BOOKMARK [3][-]{section*.60}{Point Mutation}{subsection.9.1.1}% 142
\BOOKMARK [2][-]{subsection.9.1.2}{S-expression trees \(Genetic Programming\)}{section.9.1}% 143
\BOOKMARK [2][-]{subsection.9.1.3}{Continuous Parameters \(Evolutionary Strategy\)}{section.9.1}% 144
\BOOKMARK [2][-]{subsection.9.1.4}{Lindenmayer System}{section.9.1}% 145
\BOOKMARK [1][-]{section.9.2}{Now and the Future}{chapter.9}% 146
\BOOKMARK [2][-]{subsection.9.2.1}{Grammatical Evolution}{section.9.2}% 147
\BOOKMARK [2][-]{subsection.9.2.2}{Hierarchical Evolutionary Re-Combination \(HERCL\)}{section.9.2}% 148
\BOOKMARK [-1][-]{part.6}{VI Week 6}{}% 149
\BOOKMARK [0][-]{chapter.10}{Logic}{part.6}% 150
\BOOKMARK [1][-]{section.10.1}{Logical Agents}{chapter.10}% 151
\BOOKMARK [2][-]{subsection.10.1.1}{Example: General Game-Playing Agents}{section.10.1}% 152
\BOOKMARK [3][-]{section*.61}{How to represent game rules}{subsection.10.1.1}% 153
\BOOKMARK [4][-]{section*.62}{Problem}{section*.61}% 154
\BOOKMARK [4][-]{section*.63}{Solution}{section*.61}% 155
\BOOKMARK [3][-]{section*.64}{Game Description Language \(GDL\): Facts and Rules}{subsection.10.1.1}% 156
\BOOKMARK [2][-]{subsection.10.1.2}{Example: Wumpus World}{section.10.1}% 157
\BOOKMARK [3][-]{section*.65}{Agent's actuators}{subsection.10.1.2}% 158
\BOOKMARK [3][-]{section*.66}{Agent's percepts}{subsection.10.1.2}% 159
\BOOKMARK [3][-]{section*.67}{Agents in the Wumpus World}{subsection.10.1.2}% 160
\BOOKMARK [2][-]{subsection.10.1.3}{Propositional Logic}{section.10.1}% 161
\BOOKMARK [3][-]{section*.68}{Vocabulary}{subsection.10.1.3}% 162
\BOOKMARK [3][-]{section*.69}{Example: Knights and Knaves}{subsection.10.1.3}% 163
\BOOKMARK [4][-]{section*.70}{Assumptions}{section*.69}% 164
\BOOKMARK [4][-]{section*.71}{Example}{section*.69}% 165
\BOOKMARK [3][-]{section*.72}{Models}{subsection.10.1.3}% 166
\BOOKMARK [3][-]{section*.73}{Logical Reasoning}{subsection.10.1.3}% 167
\BOOKMARK [4][-]{section*.74}{Example 1}{section*.73}% 168
\BOOKMARK [5][-]{section*.75}{How many models satisfy this sentence?}{section*.74}% 169
\BOOKMARK [5][-]{section*.76}{What follows logically from this sentence?}{section*.74}% 170
\BOOKMARK [4][-]{section*.77}{Example 2}{section*.73}% 171
\BOOKMARK [5][-]{section*.78}{How many models satisfy this sentence?}{section*.77}% 172
\BOOKMARK [3][-]{section*.79}{Logical Reasoning in the Wumpus World}{subsection.10.1.3}% 173
\BOOKMARK [2][-]{subsection.10.1.4}{First-Order Logic}{section.10.1}% 174
\BOOKMARK [3][-]{section*.80}{Vocabulary}{subsection.10.1.4}% 175
\BOOKMARK [3][-]{section*.81}{Other examples of First-Order Logic Sentences}{subsection.10.1.4}% 176
\BOOKMARK [3][-]{section*.82}{Semantics}{subsection.10.1.4}% 177
\BOOKMARK [3][-]{section*.83}{Logic Entailment}{subsection.10.1.4}% 178
\BOOKMARK [4][-]{section*.84}{Example A}{section*.83}% 179
\BOOKMARK [4][-]{section*.85}{Example B}{section*.83}% 180
\BOOKMARK [1][-]{section.10.2}{Applied Logic: Describing Games with GDL}{chapter.10}% 181
\BOOKMARK [2][-]{subsection.10.2.1}{Example: Noughts and Crosses}{section.10.2}% 182
\BOOKMARK [3][-]{section*.86}{Constants}{subsection.10.2.1}% 183
\BOOKMARK [3][-]{section*.87}{Functions}{subsection.10.2.1}% 184
\BOOKMARK [3][-]{section*.88}{Predicates}{subsection.10.2.1}% 185
\BOOKMARK [3][-]{section*.89}{Players and initial state}{subsection.10.2.1}% 186
\BOOKMARK [3][-]{section*.90}{Move Generator}{subsection.10.2.1}% 187
\BOOKMARK [3][-]{section*.91}{Game Physics}{subsection.10.2.1}% 188
\BOOKMARK [3][-]{section*.92}{Termination and Goal}{subsection.10.2.1}% 189
\BOOKMARK [1][-]{section.10.3}{Knowledge Interchange Format}{chapter.10}% 190
\BOOKMARK [2][-]{subsection.10.3.1}{Noughts And Crosses in KIF}{section.10.3}% 191
\BOOKMARK [1][-]{section.10.4}{Inference}{chapter.10}% 192
\BOOKMARK [2][-]{subsection.10.4.1}{Propositional Inference: Example}{section.10.4}% 193
\BOOKMARK [2][-]{subsection.10.4.2}{Converting a sentence to CNF}{section.10.4}% 194
\BOOKMARK [2][-]{subsection.10.4.3}{A Possible Resolution Algorithm}{section.10.4}% 195
\BOOKMARK [3][-]{section*.93}{Example}{subsection.10.4.3}% 196
\BOOKMARK [2][-]{subsection.10.4.4}{First-Order Resolution for Logic Programs/GDL}{section.10.4}% 197
\BOOKMARK [3][-]{section*.94}{Substitutions}{subsection.10.4.4}% 198
\BOOKMARK [3][-]{section*.95}{Unification}{subsection.10.4.4}% 199
\BOOKMARK [3][-]{section*.96}{Most General Unifiers}{subsection.10.4.4}% 200
\BOOKMARK [4][-]{section*.97}{Theorem}{section*.96}% 201
\BOOKMARK [3][-]{section*.98}{Resolution Step for Queries + Logic Program Clauses}{subsection.10.4.4}% 202
\BOOKMARK [3][-]{section*.100}{Derivation 1: Query Answering}{subsection.10.4.4}% 203
\BOOKMARK [3][-]{section*.102}{Derivation 2: Query Answering with Negation}{subsection.10.4.4}% 204
\BOOKMARK [3][-]{section*.104}{Derivation 3: Query Answering with Disjunction}{subsection.10.4.4}% 205
\BOOKMARK [1][-]{section.10.5}{Logic in Action}{chapter.10}% 206
\BOOKMARK [-1][-]{part.7}{VII Week 7}{}% 207
\BOOKMARK [0][-]{chapter.11}{Planning}{part.7}% 208
\BOOKMARK [1][-]{section.11.1}{Planning Agents}{chapter.11}% 209
\BOOKMARK [2][-]{subsection.11.1.1}{Example: Planning as Single-Player Game in GDL}{section.11.1}% 210
\BOOKMARK [3][-]{section*.105}{A Special-Purpose Planning Domain Definition Language \(PDDL\)}{subsection.11.1.1}% 211
\BOOKMARK [2][-]{subsection.11.1.2}{Example: Blocks World Planning}{section.11.1}% 212
\BOOKMARK [3][-]{section*.106}{Describing in PDDL}{subsection.11.1.2}% 213
\BOOKMARK [1][-]{section.11.2}{Partial-Order Planning}{chapter.11}% 214
\BOOKMARK [2][-]{subsection.11.2.1}{Plan-Based Search}{section.11.2}% 215
\BOOKMARK [2][-]{subsection.11.2.2}{Partial-Order Planning as a Search Problem}{section.11.2}% 216
\BOOKMARK [3][-]{section*.107}{Example: Partial-Order Planning for Have-The-Cake-And-Eat-It-Too}{subsection.11.2.2}% 217
\BOOKMARK [4][-]{section*.108}{Solution: Plan Without Conflict or Open Precondition}{section*.107}% 218
\BOOKMARK [2][-]{subsection.11.2.3}{Algorithm for Solving POPs}{section.11.2}% 219
\BOOKMARK [2][-]{subsection.11.2.4}{Example: Spare Tire Problem}{section.11.2}% 220
\BOOKMARK [3][-]{section*.109}{Solving the Spare Tire Problem with POP Planning}{subsection.11.2.4}% 221
\BOOKMARK [1][-]{section.11.3}{Planning with Propositional Logic}{chapter.11}% 222
\BOOKMARK [2][-]{subsection.11.3.1}{Encoding Planning Problems in Propositional Logic}{section.11.3}% 223
\BOOKMARK [3][-]{section*.110}{Example: Propositional Logic for Have-The-Cake-And-Eat-It-Too}{subsection.11.3.1}% 224
\BOOKMARK [3][-]{section*.112}{Example: Blocks World Planning as Satisfiability}{subsection.11.3.1}% 225
\BOOKMARK [0][-]{chapter.12}{General Game Playing}{part.7}% 226
\BOOKMARK [1][-]{section.12.1}{Blind General Game Playing}{chapter.12}% 227
\BOOKMARK [2][-]{subsection.12.1.1}{Monte-Carlo Tree Search: The Idea}{section.12.1}% 228
\BOOKMARK [2][-]{subsection.12.1.2}{MCTS: How it Works}{section.12.1}% 229
\BOOKMARK [2][-]{subsection.12.1.3}{Improvement: Confidence Bounds}{section.12.1}% 230
\BOOKMARK [2][-]{subsection.12.1.4}{Assessment}{section.12.1}% 231
\BOOKMARK [1][-]{section.12.2}{Informed General Game Playing}{chapter.12}% 232
\BOOKMARK [2][-]{subsection.12.2.1}{Recognising structures}{section.12.2}% 233
\BOOKMARK [3][-]{section*.113}{Informed Search: Exploiting Symmetries}{subsection.12.2.1}% 234
\BOOKMARK [3][-]{section*.114}{Informed Search: Factoring}{subsection.12.2.1}% 235
\BOOKMARK [4][-]{section*.115}{Game Factoring and its Use}{section*.114}% 236
\BOOKMARK [2][-]{subsection.12.2.2}{Discovering heuristics}{section.12.2}% 237
\BOOKMARK [3][-]{section*.116}{Evaluation Functions}{subsection.12.2.2}% 238
\BOOKMARK [4][-]{section*.117}{Example: the ``mobility'' heuristics}{section*.116}% 239
\BOOKMARK [5][-]{section*.118}{Mobility}{section*.117}% 240
\BOOKMARK [5][-]{section*.119}{Inverse Mobility}{section*.117}% 241
\BOOKMARK [3][-]{section*.120}{Generating Evaluation Functions: Goal Distance}{subsection.12.2.2}% 242
\BOOKMARK [3][-]{section*.121}{Example: Noughts and Crosses}{subsection.12.2.2}% 243
\BOOKMARK [4][-]{section*.122}{Evaluation of Intermediate States}{section*.121}% 244
\BOOKMARK [-1][-]{part.8}{VIII Week 8}{}% 245
\BOOKMARK [0][-]{chapter.13}{Learning and Decision Trees}{part.8}% 246
\BOOKMARK [1][-]{section.13.1}{Learning Agents}{chapter.13}% 247
\BOOKMARK [1][-]{section.13.2}{Types of Learning}{chapter.13}% 248
\BOOKMARK [2][-]{subsection.13.2.1}{Supervised Learning}{section.13.2}% 249
\BOOKMARK [3][-]{section*.123}{Issues with Supervised Learning}{subsection.13.2.1}% 250
\BOOKMARK [3][-]{section*.124}{Curve Fitting}{subsection.13.2.1}% 251
\BOOKMARK [4][-]{section*.125}{Ockham's Razor}{section*.124}% 252
\BOOKMARK [3][-]{section*.126}{Generalisation}{subsection.13.2.1}% 253
\BOOKMARK [4][-]{section*.127}{Choosing an Attribute}{section*.126}% 254
\BOOKMARK [4][-]{section*.128}{Entropy}{section*.126}% 255
\BOOKMARK [4][-]{section*.129}{Laplace Error and Pruning}{section*.126}% 256
\BOOKMARK [4][-]{section*.130}{Minimal Error Pruning}{section*.126}% 257
\BOOKMARK [3][-]{section*.131}{Learning Actions}{subsection.13.2.1}% 258
\BOOKMARK [2][-]{subsection.13.2.2}{Reinforcement Learning}{section.13.2}% 259
\BOOKMARK [3][-]{section*.132}{Framework}{subsection.13.2.2}% 260
\BOOKMARK [3][-]{section*.133}{Models of optimality}{subsection.13.2.2}% 261
\BOOKMARK [3][-]{section*.134}{Value Function}{subsection.13.2.2}% 262
\BOOKMARK [3][-]{section*.135}{Environment Types}{subsection.13.2.2}% 263
\BOOKMARK [3][-]{section*.136}{Delayed Learning}{subsection.13.2.2}% 264
\BOOKMARK [3][-]{section*.137}{Temporal Difference Learning}{subsection.13.2.2}% 265
\BOOKMARK [3][-]{section*.138}{Q-Learning}{subsection.13.2.2}% 266
\BOOKMARK [3][-]{section*.139}{Theoretical Results}{subsection.13.2.2}% 267
\BOOKMARK [2][-]{subsection.13.2.3}{Unsupervised Learning}{section.13.2}% 268
\BOOKMARK [-1][-]{part.9}{IX Week 9}{}% 269
\BOOKMARK [0][-]{chapter.14}{Perceptrons}{part.9}% 270
\BOOKMARK [1][-]{section.14.1}{Neural Networks}{chapter.14}% 271
\BOOKMARK [1][-]{section.14.2}{Rosenblatt Perceptron}{chapter.14}% 272
\BOOKMARK [2][-]{subsection.14.2.1}{Transfer Function}{section.14.2}% 273
\BOOKMARK [1][-]{section.14.3}{Perceptron Learning}{chapter.14}% 274
\BOOKMARK [2][-]{subsection.14.3.1}{Perceptron Learning Rule}{section.14.3}% 275
\BOOKMARK [0][-]{chapter.15}{Neural Networks}{part.9}% 276
\BOOKMARK [1][-]{section.15.1}{Gradient Descent}{chapter.15}% 277
\BOOKMARK [1][-]{section.15.2}{Chain Rule}{chapter.15}% 278
\BOOKMARK [1][-]{section.15.3}{Backpropagation}{chapter.15}% 279
\BOOKMARK [1][-]{section.15.4}{Applications of Neural Networks}{chapter.15}% 280
\BOOKMARK [2][-]{subsection.15.4.1}{ALVINN}{section.15.4}% 281
\BOOKMARK [1][-]{section.15.5}{Variations on backpropagation}{chapter.15}% 282
\BOOKMARK [2][-]{subsection.15.5.1}{Cross Entropy}{section.15.5}% 283
\BOOKMARK [3][-]{section*.140}{Cross Entropy}{subsection.15.5.1}% 284
\BOOKMARK [3][-]{section*.141}{Maximum Likelihood}{subsection.15.5.1}% 285
\BOOKMARK [3][-]{section*.142}{Least Squares Method - Finding a Line of Best Fit}{subsection.15.5.1}% 286
\BOOKMARK [3][-]{section*.143}{Derivation of Cross Entropy}{subsection.15.5.1}% 287
\BOOKMARK [3][-]{section*.144}{Bayes' Rule}{subsection.15.5.1}% 288
\BOOKMARK [4][-]{section*.145}{Example: Medical Diagnosis}{section*.144}% 289
\BOOKMARK [2][-]{subsection.15.5.2}{Weight Decay}{section.15.5}% 290
\BOOKMARK [2][-]{subsection.15.5.3}{Momentum}{section.15.5}% 291
\BOOKMARK [1][-]{section.15.6}{Conjugate Gradients}{chapter.15}% 292
\BOOKMARK [1][-]{section.15.7}{Natural Gradients \(Amari, 1995\)}{chapter.15}% 293
\BOOKMARK [1][-]{section.15.8}{Training Tips}{chapter.15}% 294
\BOOKMARK [0][-]{chapter.16}{Temporal Difference Learning}{part.9}% 295
\BOOKMARK [1][-]{section.16.1}{Backgammon}{chapter.16}% 296
\BOOKMARK [1][-]{section.16.2}{Backpropagation}{chapter.16}% 297
\BOOKMARK [1][-]{section.16.3}{Temporal Difference Learning}{chapter.16}% 298
\BOOKMARK [1][-]{section.16.4}{TD-Gammon}{chapter.16}% 299
\BOOKMARK [1][-]{section.16.5}{General Ideas}{chapter.16}% 300
\BOOKMARK [-1][-]{part.10}{X Week 10}{}% 301
\BOOKMARK [0][-]{chapter.17}{Uncertainty}{part.10}% 302
\BOOKMARK [1][-]{subsection.17.0.1}{Methods for handling uncertainty}{chapter.17}% 303
\BOOKMARK [1][-]{section.17.1}{Probability}{chapter.17}% 304
\BOOKMARK [2][-]{subsection.17.1.1}{Making decisions under uncertainty}{section.17.1}% 305
\BOOKMARK [2][-]{subsection.17.1.2}{Probability basics}{section.17.1}% 306
\BOOKMARK [2][-]{subsection.17.1.3}{Random variables}{section.17.1}% 307
\BOOKMARK [2][-]{subsection.17.1.4}{Propositions}{section.17.1}% 308
\BOOKMARK [2][-]{subsection.17.1.5}{Why use probability?}{section.17.1}% 309
\BOOKMARK [3][-]{section*.146}{Syntax for propositions}{subsection.17.1.5}% 310
\BOOKMARK [3][-]{section*.147}{Prior probability}{subsection.17.1.5}% 311
\BOOKMARK [3][-]{section*.148}{Joint probability}{subsection.17.1.5}% 312
\BOOKMARK [3][-]{section*.149}{Probability for continuous variables}{subsection.17.1.5}% 313
\BOOKMARK [3][-]{section*.150}{Gaussian density}{subsection.17.1.5}% 314
\BOOKMARK [3][-]{section*.151}{Conditional probability}{subsection.17.1.5}% 315
\BOOKMARK [1][-]{section.17.2}{Inference by enumeration}{chapter.17}% 316
\BOOKMARK [2][-]{subsection.17.2.1}{Normalization}{section.17.2}% 317
